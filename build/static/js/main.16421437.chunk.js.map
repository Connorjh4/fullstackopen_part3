{"version":3,"sources":["components/filter.js","service/contact.js","components/addContact.js","components/contacts.js","components/notification.js","App.js","index.js"],"names":["Filter","filterPerson","setFilterPerson","value","onChange","e","target","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","AddContact","persons","setPersons","setMessage","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","duplicateName","find","person","name","toLowerCase","duplicateNumber","number","error","text","color","setTimeout","window","confirm","changedContact","contactService","returnedContact","map","catch","concat","type","pattern","Contacts","handleDelete","initialContacts","filter","useEffect","console","log","filteraction","includes","onClick","SuccessMessage","styled","div","ErrorMessage","Notification","message","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16421437.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Filter = ({ filterPerson, setFilterPerson }) => {\r\n\r\n    const handleFilter = (e) => {\r\n        setFilterPerson(e.target.value)\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            Filter: <input value={filterPerson} onChange={handleFilter}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import axios from \"axios\";\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll , create , update, remove }","import React, { useState } from \"react\";\r\nimport contactService from '../service/contact'\r\n\r\nexport const AddContact = ({ persons, setPersons, setMessage }) => {\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n\r\n    const handleAddName = (e) => {\r\n        setNewName(e.target.value)\r\n    }\r\n      \r\n    const handleAddNumber = (e) => {\r\n        setNewNumber(e.target.value)\r\n    }\r\n\r\n    const addName = (e) => {\r\n        e.preventDefault()\r\n        const duplicateName = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\r\n        const duplicateNumber = persons.find(person => person.number === newNumber)\r\n        let error = false\r\n\r\n        if(newNumber === ''){\r\n            setMessage({\r\n                text: `Please add a number`,\r\n                color: 'red'\r\n            })\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n            },5000)\r\n            error = true\r\n        }\r\n        if(newName === ''){\r\n            setMessage({\r\n                text: `Please add a name`,\r\n                color: 'red'\r\n            })\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n            },5000)\r\n            error = true\r\n        }\r\n        if(duplicateNumber){\r\n            setMessage({\r\n                text: `${newNumber} is already in the phonebook`,\r\n                color: 'red'\r\n            })\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n            },5000)\r\n            error = true\r\n            setNewNumber('')\r\n            setNewName('')\r\n        }\r\n        if(duplicateName && !error){\r\n            error = true\r\n            if(window.confirm(`${newName} is already in the phonebook, replace the number?`)){\r\n                const id = duplicateName.id\r\n                const changedContact = {...duplicateName, number: newNumber}\r\n                contactService\r\n                    .update(id, changedContact)\r\n                        .then(returnedContact => {\r\n                            setPersons(persons.map(person => person.id === returnedContact.id ? returnedContact : person))\r\n                            setMessage({\r\n                                text: `${duplicateName.name}'s number has been updated`,\r\n                                color: 'green'\r\n                            })\r\n                            setNewName('')\r\n                            setNewNumber('')\r\n                        }).catch( () => {\r\n                            setMessage({\r\n                                text: `${duplicateName.name} was deleted from the phonebook`,\r\n                                color: 'red'\r\n                            })\r\n                        })\r\n                        setTimeout(() => {\r\n                            setMessage(null)\r\n                        },3500)\r\n                }\r\n        }\r\n        if(!error){\r\n            const personObject = {\r\n                name: newName,\r\n                number: newNumber,\r\n            }\r\n            contactService\r\n                .create(personObject)\r\n                .then(returnedContact => {\r\n                    setMessage({\r\n                        text: `Added ${newName}`,\r\n                        color: 'green'\r\n                    })\r\n                    setPersons(persons.concat(returnedContact))\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 5000)\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n\r\n                })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={addName}>\r\n                <div>\r\n                    name: <input type='text' value={newName} onChange={handleAddName}/>\r\n                </div>\r\n                <div>\r\n                    phone: <input type='text' pattern='[0-9]*' value={newNumber} onChange={handleAddNumber}/>\r\n                </div>\r\n                <button type=\"submit\">add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddContact;","import React, {useEffect} from \"react\";\r\nimport contactService from '../service/contact'\r\n\r\nexport const Contacts = ({ filterPerson, persons, setPersons, setMessage }) => {\r\n\r\n    const handleDelete = (e) => { \r\n        const id = e.target.value\r\n        if(window.confirm(`delete ${e.target.name}?`)){\r\n            contactService\r\n                .remove(id)\r\n                    .then( () => {\r\n                        contactService\r\n                        .getAll()\r\n                        .then(initialContacts => {\r\n                            setPersons(initialContacts)\r\n                        })\r\n                        setMessage({\r\n                            text: `${e.target.name} has been deleted`,\r\n                            color: 'green'\r\n                        })\r\n                    }).catch(() => {\r\n                        setPersons(persons.filter(person => person.name !== e.target.name))\r\n                        setMessage({\r\n                            text: `${e.target.name} was already deleted`,\r\n                            color: 'red'\r\n                        })  \r\n                    })\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    },3500)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        contactService\r\n          .getAll()\r\n          .then(initialContacts => {\r\n            setPersons(initialContacts)\r\n          })\r\n          console.log('running')\r\n    }, [setPersons])\r\n    \r\n    const filteraction = persons.filter(person => person.name.toLowerCase().includes(filterPerson.toLowerCase()) || person.number.includes(filterPerson))\r\n\r\n    return(\r\n        <>\r\n        {filteraction.map((person) => \r\n            <p key={person.id}>\r\n                <b>{person.name}</b> {person.number} \r\n                <button key={person.id} onClick={handleDelete} value={person.id} name={person.name}>delete</button>\r\n            </p>              \r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Notification = ({message}) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n    if(message.color === 'green'){\r\n        return <SuccessMessage>{message.text}</SuccessMessage>\r\n    }\r\n    if(message.color === 'red'){\r\n        return <ErrorMessage>{message.text}</ErrorMessage>\r\n    }\r\n}\r\n\r\nconst SuccessMessage = styled.div`\r\n    color: #3a663a;\r\n    background: lightgrey;\r\n    font-size: 20px;\r\n    border-style: solid;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n`\r\nconst ErrorMessage = styled.div`\r\n    color: #8f3535;\r\n    background: lightgrey;\r\n    font-size: 20px;\r\n    border-style: solid;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    margin-top: 10px;\r\n`\r\n\r\nexport default Notification;","import React, { useState } from 'react'\r\nimport Filter from './components/filter';\r\nimport AddContact from './components/addContact';\r\nimport Contacts from './components/contacts';\r\nimport Notification from './components/notification';\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons ] = useState([]) \r\n    const [ filterPerson, setFilterPerson ] = useState('')\r\n    const [ message, setMessage ] = useState(null)\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h1>Phonebook</h1>\r\n        <Filter \r\n            filterPerson={filterPerson} \r\n            setFilterPerson={setFilterPerson}\r\n        />\r\n        <Notification \r\n          message={message}\r\n        />\r\n        <h2>Add new</h2>\r\n        <AddContact \r\n            persons={persons}\r\n            setPersons={setPersons}\r\n            setMessage={setMessage}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <Contacts \r\n            persons={persons}\r\n            filterPerson={filterPerson}\r\n            setPersons={setPersons}\r\n            setMessage={setMessage}\r\n        />  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}